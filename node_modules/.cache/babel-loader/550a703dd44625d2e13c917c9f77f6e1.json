{"remainingRequest":"D:\\~projects_ref\\stuff\\vue-test\\node_modules\\babel-loader\\lib\\index.js!D:\\~projects_ref\\stuff\\vue-test\\node_modules\\vuetify-loader\\lib\\loader.js??ref--17-0!D:\\~projects_ref\\stuff\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\~projects_ref\\stuff\\vue-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\~projects_ref\\stuff\\vue-test\\src\\components\\EditDesk.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\~projects_ref\\stuff\\vue-test\\src\\components\\EditDesk.vue","mtime":1586812992978},{"path":"D:\\~projects_ref\\stuff\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\~projects_ref\\stuff\\vue-test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\~projects_ref\\stuff\\vue-test\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"D:\\~projects_ref\\stuff\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\~projects_ref\\stuff\\vue-test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkQ6XFx+cHJvamVjdHNfcmVmXFxzdHVmZlxcdnVlLXRlc3RcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgZHJhZ2dhYmxlIGZyb20gInZ1ZWRyYWdnYWJsZSI7CmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUYWJsZSIsCiAgY29tcG9uZW50czogewogICAgZHJhZ2dhYmxlOiBkcmFnZ2FibGUKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkcmFnOiBmYWxzZSwKICAgICAgbWVudTogZmFsc2UsCiAgICAgIGZpbmlzaF9tZW51OiBmYWxzZSwKICAgICAgYWRkX2NvbW1lbnQ6IGZhbHNlLAogICAgICBlZGl0X3Rhc2tfZGlhbG9nOiBmYWxzZSwKICAgICAgZmluaXNoX3Rhc2tfZGlhbG9nOiBmYWxzZSwKICAgICAgYWRkX2NvbHVtbl9kaWFsb2c6IGZhbHNlLAogICAgICBhZGRfdGFza19kaWFsb2c6IGZhbHNlLAogICAgICBuZXdfY29sdW1uX3RpdGxlOiAnJywKICAgICAgbmV3X3Rhc2s6IHsKICAgICAgICAndGl0bGUnOiAnJywKICAgICAgICAnZGVzY3JpcHRpb24nOiAnJywKICAgICAgICAnZGVhZGxpbmUnOiBudWxsLAogICAgICAgICdzdGF0dXNfaWQnOiAnJwogICAgICB9LAogICAgICBvcGVuX3Rhc2s6IHsKICAgICAgICAndGl0bGUnOiAnJywKICAgICAgICAnZGVzY3JpcHRpb24nOiAnJywKICAgICAgICAnZGVhZGxpbmUnOiBudWxsLAogICAgICAgICdjb21tZW50JzogJycsCiAgICAgICAgJ2lkJzogbnVsbCwKICAgICAgICAnY29sdW1uX2lkJzogbnVsbCwKICAgICAgICAnZmluaXNoX2RhdGUnOiBudWxsCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgZ2V0RGVzazogZnVuY3Rpb24gZ2V0RGVzaygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0RGVza0J5SWQoK3RoaXMuJHJvdXRlLnBhcmFtcy5pZCk7CiAgICB9LAogICAgZ2V0QWxsRGVza3M6IGZ1bmN0aW9uIGdldEFsbERlc2tzKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXREZXNrczsKICAgIH0sCiAgICBkcmFnT3B0aW9uczogZnVuY3Rpb24gZHJhZ09wdGlvbnMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgYW5pbWF0aW9uOiAyMDAsCiAgICAgICAgZ3JvdXA6ICJkZXNjcmlwdGlvbiIsCiAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLAogICAgICAgIGdob3N0Q2xhc3M6ICJnaG9zdCIKICAgICAgfTsKICAgIH0KICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoWyd1cGRhdGVEZXNrJywgJ3NldEFsZXJ0JywgJ2FwaUNhbGwnXSksIHsKICAgIHB1c2hfY29sdW1uOiBmdW5jdGlvbiBwdXNoX2NvbHVtbigpIHsKICAgICAgdmFyIGNvbCA9IHsKICAgICAgICAndGl0bGUnOiB0aGlzLm5ld19jb2x1bW5fdGl0bGUsCiAgICAgICAgJ2lkJzogdGhpcy5nZXREZXNrLmNvbHVtbnMucmVkdWNlKGZ1bmN0aW9uIChwcmV2LCBjdXJyZW50KSB7CiAgICAgICAgICByZXR1cm4gcHJldi5pZCA+IGN1cnJlbnQuaWQgPyBwcmV2IDogY3VycmVudDsKICAgICAgICB9KS5pZCArIDEsCiAgICAgICAgJ3Rhc2tzJzogW10KICAgICAgfTsKICAgICAgdGhpcy51cGRhdGVEZXNrKHRoaXMuZ2V0RGVzay5jb2x1bW5zLnB1c2goY29sKSk7CiAgICAgIHRoaXMuYWRkX2NvbHVtbl9kaWFsb2cgPSBmYWxzZTsKICAgICAgdGhpcy5uZXdfY29sdW1uX3RpdGxlID0gJyc7CiAgICB9LAogICAgcHVzaF90YXNrOiBmdW5jdGlvbiBwdXNoX3Rhc2soKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmdldERlc2suY29sdW1ucy5maW5kKGZ1bmN0aW9uIChjb2wpIHsKICAgICAgICByZXR1cm4gY29sLmlkID09IF90aGlzLm5ld190YXNrLnN0YXR1c19pZDsKICAgICAgfSlbJ3Rhc2tzJ10ucHVzaCh7CiAgICAgICAgJ2lkJzogK25ldyBEYXRlKCksCiAgICAgICAgJ3RpdGxlJzogdGhpcy5uZXdfdGFzay50aXRsZSwKICAgICAgICAnZGVzY3JpcHRpb24nOiB0aGlzLm5ld190YXNrLmRlc2NyaXB0aW9uLAogICAgICAgICdkZWFkbGluZSc6IHRoaXMubmV3X3Rhc2suZGVhZGxpbmUKICAgICAgfSk7CiAgICAgIHRoaXMudXBkYXRlRGVzayh0aGlzLmdldERlc2spOwogICAgICB0aGlzLmFkZF90YXNrX2RpYWxvZyA9IGZhbHNlOwogICAgICB0aGlzLm5ld190YXNrID0gewogICAgICAgICd0aXRsZSc6ICcnLAogICAgICAgICdkZXNjcmlwdGlvbic6ICcnLAogICAgICAgICdkZWFkbGluZSc6IG51bGwsCiAgICAgICAgJ3N0YXR1c19pZCc6ICcnCiAgICAgIH07CiAgICB9LAogICAgcmVtb3ZlX2NvbHVtbjogZnVuY3Rpb24gcmVtb3ZlX2NvbHVtbihpZCkgewogICAgICB2YXIgaWR4ID0gdGhpcy5nZXREZXNrLmNvbHVtbnMuZmluZEluZGV4KGZ1bmN0aW9uIChjb2wpIHsKICAgICAgICByZXR1cm4gY29sLmlkID09IGlkOwogICAgICB9KTsKICAgICAgaWYgKHRoaXMuZ2V0RGVzay5jb2x1bW5zW2lkeF0udGFza3MubGVuZ3RoKSB0aGlzLnNldEFsZXJ0KHsKICAgICAgICAnb3Blbic6IHRydWUsCiAgICAgICAgJ2NvbG9yJzogJ2Vycm9yJywKICAgICAgICAndGV4dCc6ICfQndC10LvRjNC30Y8g0YPQtNCw0LvQuNGC0Ywg0LrQvtC70L7QvdC60YMsINCyINC60L7RgtC+0YDQvtC5INC10YHRgtGMINGN0LvQtdC80LXQvdGC0YsuJwogICAgICB9KTtlbHNlIHsKICAgICAgICB2YXIgZGVzayA9IHRoaXMuZ2V0RGVzay5jb2x1bW5zLnNwbGljZShpZHgsIDEpOwogICAgICAgIHRoaXMudXBkYXRlRGVzayhkZXNrKTsKICAgICAgfQogICAgfSwKICAgIG9wZW5fdGFza192aWV3OiBmdW5jdGlvbiBvcGVuX3Rhc2tfdmlldyh0YXNrX2lkLCBjb2x1bW5faWQpIHsKICAgICAgdmFyIHRhc2sgPSB0aGlzLmdldERlc2suY29sdW1ucy5maW5kKGZ1bmN0aW9uIChjb2wpIHsKICAgICAgICByZXR1cm4gY29sLmlkID09IGNvbHVtbl9pZDsKICAgICAgfSkudGFza3MuZmluZChmdW5jdGlvbiAodGFzaykgewogICAgICAgIHJldHVybiB0YXNrLmlkID09IHRhc2tfaWQ7CiAgICAgIH0pOwogICAgICB0aGlzLm9wZW5fdGFzay50aXRsZSA9IHRhc2sudGl0bGU7CiAgICAgIHRoaXMub3Blbl90YXNrLmRlc2NyaXB0aW9uID0gdGFzay5kZXNjcmlwdGlvbjsKICAgICAgdGhpcy5vcGVuX3Rhc2suZGVhZGxpbmUgPSB0YXNrLmRlYWRsaW5lOwogICAgICB0aGlzLm9wZW5fdGFzay5jb21tZW50ID0gdGFzay5jb21tZW50OwogICAgICB0aGlzLm9wZW5fdGFzay5jb2x1bW5faWQgPSBjb2x1bW5faWQ7CiAgICAgIHRoaXMub3Blbl90YXNrLmlkID0gdGFza19pZDsKICAgICAgdGhpcy5lZGl0X3Rhc2tfZGlhbG9nID0gdHJ1ZTsKICAgICAgdGhpcy5vcGVuX3Rhc2suZmluaXNoX2RhdGUgPSBudWxsOwogICAgfSwKICAgIHNhdmVfY29tbWVudDogZnVuY3Rpb24gc2F2ZV9jb21tZW50KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBjb2xfaWR4ID0gdGhpcy5nZXREZXNrLmNvbHVtbnMuZmluZEluZGV4KGZ1bmN0aW9uIChjb2wpIHsKICAgICAgICByZXR1cm4gY29sLmlkID09IF90aGlzMi5vcGVuX3Rhc2suY29sdW1uX2lkOwogICAgICB9KTsKICAgICAgdmFyIHRhc2tfaWR4ID0gdGhpcy5nZXREZXNrLmNvbHVtbnNbY29sX2lkeF0udGFza3MuZmluZEluZGV4KGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgcmV0dXJuIHRhc2suaWQgPT0gX3RoaXMyLm9wZW5fdGFzay5pZDsKICAgICAgfSk7CiAgICAgIHRoaXMuZ2V0RGVzay5jb2x1bW5zW2NvbF9pZHhdLnRhc2tzW3Rhc2tfaWR4XS5jb21tZW50ID0gdGhpcy5vcGVuX3Rhc2suY29tbWVudDsKICAgICAgdGhpcy51cGRhdGVEZXNrKHRoaXMuZ2V0RGVzayk7CiAgICAgIHRoaXMuc2V0QWxlcnQoewogICAgICAgICdvcGVuJzogdHJ1ZSwKICAgICAgICAnY29sb3InOiAnc3VjY2VzcycsCiAgICAgICAgJ3RleHQnOiAn0JrQvtC80LzQtdC90YLQsNGA0LjQuSDRgdC+0YXRgNCw0L3QtdC9LicKICAgICAgfSk7CiAgICB9LAogICAgZmluaXNoX3Rhc2s6IGZ1bmN0aW9uIGZpbmlzaF90YXNrKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBjb2xfaWR4ID0gdGhpcy5nZXREZXNrLmNvbHVtbnMuZmluZEluZGV4KGZ1bmN0aW9uIChjb2wpIHsKICAgICAgICByZXR1cm4gY29sLmlkID09IF90aGlzMy5vcGVuX3Rhc2suY29sdW1uX2lkOwogICAgICB9KTsKICAgICAgdmFyIHRhc2tfaWR4ID0gdGhpcy5nZXREZXNrLmNvbHVtbnNbY29sX2lkeF0udGFza3MuZmluZEluZGV4KGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgcmV0dXJuIHRhc2suaWQgPT0gX3RoaXMzLm9wZW5fdGFzay5pZDsKICAgICAgfSk7CiAgICAgIHRoaXMuZ2V0RGVza1snZmluaXNoZWRfdGFza3MnXS51bnNoaWZ0KHRoaXMuZ2V0RGVzay5jb2x1bW5zW2NvbF9pZHhdLnRhc2tzW3Rhc2tfaWR4XSk7CiAgICAgIHRoaXMuZ2V0RGVzay5jb2x1bW5zW2NvbF9pZHhdLnRhc2tzLnNwbGljZSh0YXNrX2lkeCwgMSk7CiAgICAgIHRoaXMudXBkYXRlRGVzayh0aGlzLmdldERlc2spOwogICAgICB0aGlzLmZpbmlzaF90YXNrX2RpYWxvZyA9IHRoaXMuZWRpdF90YXNrX2RpYWxvZyA9IGZhbHNlOwogICAgfSwKICAgIHNhdmU6IGZ1bmN0aW9uIHNhdmUoZGF0ZSkgewogICAgICB0aGlzLiRyZWZzLm1lbnUuc2F2ZShkYXRlKTsKICAgIH0sCiAgICBzYXZlX2FuZF9jYWxsX2FwaTogZnVuY3Rpb24gc2F2ZV9hbmRfY2FsbF9hcGkoZGF0ZSkgewogICAgICB0aGlzLiRyZWZzLm1lbnUuc2F2ZShkYXRlKTsKICAgICAgdGhpcy5hcGlDYWxsKGRhdGUuc3BsaXQoJy0nKSk7CiAgICB9CiAgfSkKfTs="},{"version":3,"sources":["EditDesk.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <v-container>\r\n        <h1>{{getDesk.title}}</h1>\r\n\r\n        <draggable\r\n                class=\"row\"\r\n                v-model=\"getDesk.columns\"\r\n                group=\"statuses\"\r\n                :list=\"getDesk.columns\"\r\n                @start=\"drag = true\"\r\n                @end=\"drag = false\"\r\n                v-bind=\"dragOptions\"\r\n                @change=\"updateDesk(getDesk)\"\r\n        >\r\n            <v-simple-table\r\n                    class=\"pa-2 table\"\r\n                    outlined\r\n                    v-for=\"group in getDesk.columns\"\r\n                    :key=\"group.title\"\r\n            >\r\n                <template v-slot:default>\r\n                    <v-icon class=\"delete-col\" @click=\"remove_column(group.id)\">mdi-delete</v-icon>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>{{group.title}}</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <draggable\r\n                            v-model=\"getDesk.columns\"\r\n                            group=\"tasks\"\r\n                            :list=\"group.tasks\"\r\n                            @start=\"drag = true\"\r\n                            @end=\"drag = false\"\r\n                            v-bind=\"dragOptions\"\r\n                            tag=\"tbody\"\r\n                            @change=\"updateDesk(getDesk)\"\r\n                    >\r\n                        <tr\r\n                                v-for=\"task in group.tasks\"\r\n                                :key=\"task.id\">\r\n                            <td @click=\"open_task_view(task.id, group.id)\">{{task.title}}</td>\r\n                        </tr>\r\n                    </draggable>\r\n                </template>\r\n            </v-simple-table>\r\n        </draggable>\r\n\r\n        <div class=\"buttons__block\">\r\n            <v-dialog v-model=\"add_column_dialog\" persistent max-width=\"600px\">\r\n                <template v-slot:activator=\"{ on }\">\r\n                    <v-btn v-on=\"on\" color=\"primary\">Создать колонку</v-btn>\r\n                </template>\r\n                <v-card>\r\n                    <v-card-title>\r\n                        <span class=\"headline\">Создание новой колонки</span>\r\n                    </v-card-title>\r\n                    <v-card-text>\r\n                        <v-container>\r\n                            <v-row>\r\n                                <v-col cols=\"12\">\r\n                                    <v-text-field label=\"Название*\" v-model=\"new_column_title\" required></v-text-field>\r\n                                </v-col>\r\n                            </v-row>\r\n                        </v-container>\r\n                    </v-card-text>\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn color=\"blue darken-1\" text @click=\"add_column_dialog = false\">Отмена</v-btn>\r\n                        <v-btn color=\"blue darken-1\" text @click=\"push_column\" :disabled=\"!new_column_title\">\r\n                            Сохранить колонку\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n\r\n            <v-dialog v-model=\"add_task_dialog\" persistent max-width=\"600px\">\r\n                <template v-slot:activator=\"{ on }\">\r\n                    <v-btn v-on=\"on\" color=\"primary\">Создать задачу</v-btn>\r\n                </template>\r\n                <v-card>\r\n                    <v-card-title>\r\n                        <span class=\"headline\">Создание новой задачи</span>\r\n                    </v-card-title>\r\n                    <v-card-text>\r\n                        <v-container>\r\n                            <v-row>\r\n                                <v-col cols=\"12\">\r\n                                    <v-text-field label=\"Название*\" v-model=\"new_task.title\" required></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"12\">\r\n                                    <v-textarea label=\"Описание\" v-model=\"new_task.description\"\r\n                                    ></v-textarea>\r\n                                </v-col>\r\n                                <v-col cols=\"12\">\r\n                                    <v-menu\r\n                                            ref=\"menu\"\r\n                                            v-model=\"menu\"\r\n                                            :close-on-content-click=\"false\"\r\n                                            transition=\"scale-transition\"\r\n                                            offset-y\r\n                                            min-width=\"290px\"\r\n                                    >\r\n                                        <template v-slot:activator=\"{ on }\">\r\n                                            <v-text-field\r\n                                                    v-model=\"new_task.deadline\"\r\n                                                    label=\"Дата завершения\"\r\n                                                    readonly\r\n                                                    v-on=\"on\"\r\n                                            ></v-text-field>\r\n                                        </template>\r\n                                        <v-date-picker\r\n                                                ref=\"picker\"\r\n                                                v-model=\"new_task.deadline\"\r\n                                                min=\"1950-01-01\"\r\n                                                @change=\"save\"\r\n                                        ></v-date-picker>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                                <v-col cols=\"12\">\r\n                                    <v-select\r\n                                            :items=\"getDesk.columns\"\r\n                                            v-model=\"new_task.status_id\"\r\n                                            required\r\n                                            item-text=\"title\"\r\n                                            item-value=\"id\"\r\n                                            label=\"Статус задачи*\"\r\n                                    ></v-select>\r\n                                </v-col>\r\n                            </v-row>\r\n                        </v-container>\r\n                    </v-card-text>\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn color=\"blue darken-1\" text @click=\"add_task_dialog = false\">Отмена</v-btn>\r\n                        <v-btn color=\"blue darken-1\" text @click=\"push_task\"\r\n                               :disabled=\"!new_task.title || !new_task.status_id\">\r\n                            Добавить задачу\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n\r\n\r\n            <v-menu offset-y>\r\n                <template v-slot:activator=\"{ on }\">\r\n                    <v-btn\r\n                            v-on=\"on\"\r\n                    >\r\n                        Перейти к другой доске\r\n                    </v-btn>\r\n                </template>\r\n                <v-list>\r\n                    <v-list-item\r\n                            v-for=\"(desk, index) in getAllDesks\"\r\n                            :to=\"`/desks/${desk.id}`\"\r\n                            :key=\"index\"\r\n                            @click=\"\"\r\n                    >\r\n                        <v-list-item-title>{{ desk.title }}</v-list-item-title>\r\n                    </v-list-item>\r\n                </v-list>\r\n            </v-menu>\r\n        </div>\r\n\r\n        <v-dialog v-model=\"edit_task_dialog\" persistent max-width=\"600px\">\r\n            <v-card>\r\n                <v-card-title>\r\n                    <span class=\"headline\">Просмотр задачи</span>\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-container>\r\n                        <v-row>\r\n                            <v-col cols=\"12\">\r\n                                <v-text-field label=\"Название\" v-model=\"open_task.title\" readonly></v-text-field>\r\n                            </v-col>\r\n                            <v-col cols=\"12\" v-if=\"open_task.description\">\r\n                                <v-textarea label=\"Описание\" v-model=\"open_task.description\" readonly\r\n                                ></v-textarea>\r\n                            </v-col>\r\n                            <v-col cols=\"12\" v-if=\"open_task.deadline\">\r\n                                <v-text-field label=\"Дедлайн\" v-model=\"open_task.deadline\" readonly></v-text-field>\r\n                            </v-col>\r\n                            <v-col cols=\"12\" v-if=\"open_task.comment || add_comment\">\r\n                                <v-textarea label=\"Комментарий\" v-model=\"open_task.comment\"\r\n                                ></v-textarea>\r\n                                <v-btn color=\"primary\" @click=\"save_comment\">Сохранить комментарий</v-btn>\r\n                            </v-col>\r\n                            <v-col cols=\"12\" v-else>\r\n                                <v-btn color=\"primary\" @click=\"add_comment = true\">Добавить комментарий</v-btn>\r\n                            </v-col>\r\n                        </v-row>\r\n                    </v-container>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn color=\"blue darken-1\" text @click=\"edit_task_dialog = false\">Закрыть\r\n                    </v-btn>\r\n                    <v-dialog v-model=\"finish_task_dialog\" persistent max-width=\"600px\">\r\n                        <template v-slot:activator=\"{ on }\">\r\n                            <v-btn v-on=\"on\" color=\"blue darken-1\" text>Завершить задачу</v-btn>\r\n                        </template>\r\n                        <v-card>\r\n                            <v-card-title>\r\n                                <span class=\"headline\">Завершение задачи</span>\r\n                            </v-card-title>\r\n                            <v-card-text>\r\n                                <v-container>\r\n                                    <v-row>\r\n                                        <v-col cols=\"12\">\r\n                                            <v-menu\r\n                                                    ref=\"menu\"\r\n                                                    v-model=\"finish_menu\"\r\n                                                    :close-on-content-click=\"false\"\r\n                                                    transition=\"scale-transition\"\r\n                                                    offset-y\r\n                                                    min-width=\"290px\"\r\n                                            >\r\n                                                <template v-slot:activator=\"{ on }\">\r\n                                                    <v-text-field\r\n                                                            v-model=\"open_task.finish_date\"\r\n                                                            label=\"Дата завершения\"\r\n                                                            readonly\r\n                                                            v-on=\"on\"\r\n                                                    ></v-text-field>\r\n                                                </template>\r\n                                                <v-date-picker\r\n                                                        ref=\"picker\"\r\n                                                        v-model=\"open_task.finish_date\"\r\n                                                        min=\"1950-01-01\"\r\n                                                        @change=\"save_and_call_api\"\r\n                                                ></v-date-picker>\r\n                                            </v-menu>\r\n                                        </v-col>\r\n                                    </v-row>\r\n                                </v-container>\r\n                            </v-card-text>\r\n                            <v-card-actions>\r\n                                <v-spacer></v-spacer>\r\n                                <v-btn color=\"blue darken-1\" text @click=\"finish_task_dialog = false\">Отмена</v-btn>\r\n                                <v-btn color=\"blue darken-1\" text @click=\"finish_task\" :disabled=\"!open_task.finish_date\">\r\n                                    Завершить задачу\r\n                                </v-btn>\r\n                            </v-card-actions>\r\n                        </v-card>\r\n                    </v-dialog>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\n    import draggable from \"vuedraggable\"\r\n    import {mapActions} from 'vuex'\r\n\r\n    export default {\r\n        name: \"Table\",\r\n        components: {\r\n            draggable\r\n        },\r\n        data() {\r\n            return {\r\n                drag: false,\r\n                menu: false,\r\n                finish_menu: false,\r\n                add_comment: false,\r\n                edit_task_dialog: false,\r\n                finish_task_dialog: false,\r\n                add_column_dialog: false,\r\n                add_task_dialog: false,\r\n                new_column_title: '',\r\n                new_task: {\r\n                    'title': '',\r\n                    'description': '',\r\n                    'deadline': null,\r\n                    'status_id': ''\r\n                },\r\n                open_task: {\r\n                    'title': '',\r\n                    'description': '',\r\n                    'deadline': null,\r\n                    'comment': '',\r\n                    'id': null,\r\n                    'column_id': null,\r\n                    'finish_date': null\r\n                }\r\n            };\r\n        },\r\n        computed: {\r\n            getDesk() {\r\n                return this.$store.getters.getDeskById(+this.$route.params.id)\r\n            },\r\n            getAllDesks() {\r\n                return this.$store.getters.getDesks\r\n            },\r\n            dragOptions() {\r\n                return {\r\n                    animation: 200,\r\n                    group: \"description\",\r\n                    disabled: false,\r\n                    ghostClass: \"ghost\"\r\n                };\r\n            }\r\n        },\r\n        methods: {\r\n            ...mapActions(['updateDesk', 'setAlert', 'apiCall']),\r\n            push_column() {\r\n                const col = {\r\n                    'title': this.new_column_title,\r\n                    'id': this.getDesk.columns.reduce((prev, current) => (prev.id > current.id) ? prev : current).id + 1,\r\n                    'tasks': []\r\n                }\r\n                this.updateDesk(this.getDesk.columns.push(col))\r\n                this.add_column_dialog = false\r\n                this.new_column_title = ''\r\n            },\r\n            push_task() {\r\n                this.getDesk.columns.find(col => col.id == this.new_task.status_id)['tasks'].push({\r\n                    'id': +new Date(),\r\n                    'title': this.new_task.title,\r\n                    'description': this.new_task.description,\r\n                    'deadline': this.new_task.deadline,\r\n                })\r\n                this.updateDesk(this.getDesk)\r\n                this.add_task_dialog = false\r\n                this.new_task = {\r\n                    'title': '',\r\n                    'description': '',\r\n                    'deadline': null,\r\n                    'status_id': ''\r\n                }\r\n            },\r\n            remove_column(id) {\r\n                const idx = this.getDesk.columns.findIndex(col => col.id == id)\r\n                if (this.getDesk.columns[idx].tasks.length) this.setAlert({\r\n                    'open': true,\r\n                    'color': 'error',\r\n                    'text': 'Нельзя удалить колонку, в которой есть элементы.'\r\n                })\r\n                else {\r\n                    const desk = this.getDesk.columns.splice(idx, 1)\r\n                    this.updateDesk(desk)\r\n                }\r\n            },\r\n            open_task_view(task_id, column_id) {\r\n                const task = this.getDesk.columns.find(col => col.id == column_id).tasks.find(task => task.id == task_id)\r\n                this.open_task.title = task.title\r\n                this.open_task.description = task.description\r\n                this.open_task.deadline = task.deadline\r\n                this.open_task.comment = task.comment\r\n                this.open_task.column_id = column_id\r\n                this.open_task.id = task_id\r\n                this.edit_task_dialog = true\r\n                this.open_task.finish_date = null\r\n            },\r\n            save_comment() {\r\n                const col_idx = this.getDesk.columns.findIndex(col => col.id == this.open_task.column_id)\r\n                const task_idx = this.getDesk.columns[col_idx].tasks.findIndex(task => task.id == this.open_task.id)\r\n                this.getDesk.columns[col_idx].tasks[task_idx].comment = this.open_task.comment\r\n                this.updateDesk(this.getDesk)\r\n                this.setAlert({\r\n                    'open': true,\r\n                    'color': 'success',\r\n                    'text': 'Комментарий сохранен.'\r\n                })\r\n            },\r\n            finish_task() {\r\n                const col_idx = this.getDesk.columns.findIndex(col => col.id == this.open_task.column_id)\r\n                const task_idx = this.getDesk.columns[col_idx].tasks.findIndex(task => task.id == this.open_task.id)\r\n                this.getDesk['finished_tasks'].unshift(this.getDesk.columns[col_idx].tasks[task_idx])\r\n                this.getDesk.columns[col_idx].tasks.splice(task_idx, 1)\r\n                this.updateDesk(this.getDesk)\r\n                this.finish_task_dialog = this.edit_task_dialog = false\r\n            },\r\n            save(date) {\r\n                this.$refs.menu.save(date)\r\n            },\r\n            save_and_call_api(date) {\r\n                this.$refs.menu.save(date)\r\n                this.apiCall(date.split('-'))\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    h1 {\r\n        margin-bottom: 50px;\r\n        text-align: left;\r\n    }\r\n\r\n    tr {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .flip-list-move {\r\n        transition: transform 0.5s;\r\n    }\r\n\r\n    .no-move {\r\n        transition: transform 0s;\r\n    }\r\n\r\n    .ghost {\r\n        opacity: 0.5;\r\n        background: #c8ebfb;\r\n    }\r\n\r\n    .list-group {\r\n        min-height: 20px;\r\n    }\r\n\r\n    .list-group-item {\r\n        cursor: move;\r\n    }\r\n\r\n    .list-group-item i {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .table {\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        padding: 0 !important;\r\n        margin-right: 15px;\r\n        position: relative;\r\n    }\r\n\r\n    .delete-col {\r\n        position: absolute;\r\n        bottom: -30px;\r\n        right: 0;\r\n        transition: all .3s;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .table:hover .delete-col {\r\n        opacity: 1;\r\n    }\r\n\r\n    .table thead th {\r\n        text-transform: uppercase;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .row {\r\n        margin: 0;\r\n    }\r\n\r\n    .buttons__block {\r\n        margin-top: 50px;\r\n    }\r\n\r\n    .buttons__block button {\r\n        margin-right: 20px;\r\n    }\r\n</style>"],"sourceRoot":"src/components"}]}