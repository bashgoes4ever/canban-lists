{"remainingRequest":"D:\\~projects_ref\\stuff\\vue-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\~projects_ref\\stuff\\vue-test\\src\\components\\EditDesk.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\~projects_ref\\stuff\\vue-test\\src\\components\\EditDesk.vue","mtime":1586785625803},{"path":"D:\\~projects_ref\\stuff\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\~projects_ref\\stuff\\vue-test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\~projects_ref\\stuff\\vue-test\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"D:\\~projects_ref\\stuff\\vue-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\~projects_ref\\stuff\\vue-test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkcmFnZ2FibGUgZnJvbSAidnVlZHJhZ2dhYmxlIgppbXBvcnQge21hcEFjdGlvbnN9IGZyb20gJ3Z1ZXgnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiVGFibGUiLAogICAgY29tcG9uZW50czogewogICAgICAgIGRyYWdnYWJsZQogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZHJhZzogZmFsc2UsCiAgICAgICAgICAgIG1lbnU6IGZhbHNlLAogICAgICAgICAgICBmaW5pc2hfbWVudTogZmFsc2UsCiAgICAgICAgICAgIGFkZF9jb21tZW50OiBmYWxzZSwKICAgICAgICAgICAgZWRpdF90YXNrX2RpYWxvZzogZmFsc2UsCiAgICAgICAgICAgIGZpbmlzaF90YXNrX2RpYWxvZzogZmFsc2UsCiAgICAgICAgICAgIGFkZF9jb2x1bW5fZGlhbG9nOiBmYWxzZSwKICAgICAgICAgICAgYWRkX3Rhc2tfZGlhbG9nOiBmYWxzZSwKICAgICAgICAgICAgbmV3X2NvbHVtbl90aXRsZTogJycsCiAgICAgICAgICAgIG5ld190YXNrOiB7CiAgICAgICAgICAgICAgICAndGl0bGUnOiAnJywKICAgICAgICAgICAgICAgICdkZXNjcmlwdGlvbic6ICcnLAogICAgICAgICAgICAgICAgJ2RlYWRsaW5lJzogbnVsbCwKICAgICAgICAgICAgICAgICdzdGF0dXNfaWQnOiAnJwogICAgICAgICAgICB9LAogICAgICAgICAgICBvcGVuX3Rhc2s6IHsKICAgICAgICAgICAgICAgICd0aXRsZSc6ICcnLAogICAgICAgICAgICAgICAgJ2Rlc2NyaXB0aW9uJzogJycsCiAgICAgICAgICAgICAgICAnZGVhZGxpbmUnOiBudWxsLAogICAgICAgICAgICAgICAgJ2NvbW1lbnQnOiAnJywKICAgICAgICAgICAgICAgICdpZCc6IG51bGwsCiAgICAgICAgICAgICAgICAnY29sdW1uX2lkJzogbnVsbCwKICAgICAgICAgICAgICAgICdmaW5pc2hfZGF0ZSc6IG51bGwKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBnZXREZXNrKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXREZXNrQnlJZCgrdGhpcy4kcm91dGUucGFyYW1zLmlkKQogICAgICAgIH0sCiAgICAgICAgZ2V0QWxsRGVza3MoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldERlc2tzCiAgICAgICAgfSwKICAgICAgICBkcmFnT3B0aW9ucygpIHsKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogMjAwLAogICAgICAgICAgICAgICAgZ3JvdXA6ICJkZXNjcmlwdGlvbiIsCiAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2UsCiAgICAgICAgICAgICAgICBnaG9zdENsYXNzOiAiZ2hvc3QiCiAgICAgICAgICAgIH07CiAgICAgICAgfQogICAgfSwKICAgIHdhdGNoOiB7fSwKICAgIG1ldGhvZHM6IHsKICAgICAgICAuLi5tYXBBY3Rpb25zKFsndXBkYXRlRGVzaycsICdzZXRBbGVydCcsICdhcGlDYWxsJ10pLAogICAgICAgIGZuKCkgewogICAgICAgICAgICBjb25zb2xlLmxvZygnMTIzJykKICAgICAgICB9LAogICAgICAgIHB1c2hfY29sdW1uKCkgewogICAgICAgICAgICBjb25zdCBjb2wgPSB7CiAgICAgICAgICAgICAgICAndGl0bGUnOiB0aGlzLm5ld19jb2x1bW5fdGl0bGUsCiAgICAgICAgICAgICAgICAnaWQnOiB0aGlzLmdldERlc2suY29sdW1ucy5yZWR1Y2UoKHByZXYsIGN1cnJlbnQpID0+IChwcmV2LmlkID4gY3VycmVudC5pZCkgPyBwcmV2IDogY3VycmVudCkuaWQgKyAxLAogICAgICAgICAgICAgICAgJ3Rhc2tzJzogW10KICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLnVwZGF0ZURlc2sodGhpcy5nZXREZXNrLmNvbHVtbnMucHVzaChjb2wpKQogICAgICAgICAgICB0aGlzLmFkZF9jb2x1bW5fZGlhbG9nID0gZmFsc2UKICAgICAgICAgICAgdGhpcy5uZXdfY29sdW1uX3RpdGxlID0gJycKICAgICAgICB9LAogICAgICAgIHB1c2hfdGFzaygpIHsKICAgICAgICAgICAgdGhpcy5nZXREZXNrLmNvbHVtbnMuZmluZChjb2wgPT4gY29sLmlkID09IHRoaXMubmV3X3Rhc2suc3RhdHVzX2lkKVsndGFza3MnXS5wdXNoKHsKICAgICAgICAgICAgICAgICdpZCc6ICtuZXcgRGF0ZSgpLAogICAgICAgICAgICAgICAgJ3RpdGxlJzogdGhpcy5uZXdfdGFzay50aXRsZSwKICAgICAgICAgICAgICAgICdkZXNjcmlwdGlvbic6IHRoaXMubmV3X3Rhc2suZGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgICAnZGVhZGxpbmUnOiB0aGlzLm5ld190YXNrLmRlYWRsaW5lLAogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLnVwZGF0ZURlc2sodGhpcy5nZXREZXNrKQogICAgICAgICAgICB0aGlzLmFkZF90YXNrX2RpYWxvZyA9IGZhbHNlCiAgICAgICAgICAgIHRoaXMubmV3X3Rhc2sgPSB7CiAgICAgICAgICAgICAgICAndGl0bGUnOiAnJywKICAgICAgICAgICAgICAgICdkZXNjcmlwdGlvbic6ICcnLAogICAgICAgICAgICAgICAgJ2RlYWRsaW5lJzogbnVsbCwKICAgICAgICAgICAgICAgICdzdGF0dXNfaWQnOiAnJwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICByZW1vdmVfY29sdW1uKGlkKSB7CiAgICAgICAgICAgIGNvbnN0IGlkeCA9IHRoaXMuZ2V0RGVzay5jb2x1bW5zLmZpbmRJbmRleChjb2wgPT4gY29sLmlkID09IGlkKQogICAgICAgICAgICBpZiAodGhpcy5nZXREZXNrLmNvbHVtbnNbaWR4XS50YXNrcy5sZW5ndGgpIHRoaXMuc2V0QWxlcnQoewogICAgICAgICAgICAgICAgJ29wZW4nOiB0cnVlLAogICAgICAgICAgICAgICAgJ2NvbG9yJzogJ2Vycm9yJywKICAgICAgICAgICAgICAgICd0ZXh0JzogJ9Cd0LXQu9GM0LfRjyDRg9C00LDQu9C40YLRjCDQutC+0LvQvtC90LrRgywg0LIg0LrQvtGC0L7RgNC+0Lkg0LXRgdGC0Ywg0Y3Qu9C10LzQtdC90YLRiy4nCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgY29uc3QgZGVzayA9IHRoaXMuZ2V0RGVzay5jb2x1bW5zLnNwbGljZShpZHgsIDEpCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZURlc2soZGVzaykKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgb3Blbl90YXNrX3ZpZXcodGFza19pZCwgY29sdW1uX2lkKSB7CiAgICAgICAgICAgIGNvbnN0IHRhc2sgPSB0aGlzLmdldERlc2suY29sdW1ucy5maW5kKGNvbCA9PiBjb2wuaWQgPT0gY29sdW1uX2lkKS50YXNrcy5maW5kKHRhc2sgPT4gdGFzay5pZCA9PSB0YXNrX2lkKQogICAgICAgICAgICB0aGlzLm9wZW5fdGFzay50aXRsZSA9IHRhc2sudGl0bGUKICAgICAgICAgICAgdGhpcy5vcGVuX3Rhc2suZGVzY3JpcHRpb24gPSB0YXNrLmRlc2NyaXB0aW9uCiAgICAgICAgICAgIHRoaXMub3Blbl90YXNrLmRlYWRsaW5lID0gdGFzay5kZWFkbGluZQogICAgICAgICAgICB0aGlzLm9wZW5fdGFzay5jb21tZW50ID0gdGFzay5jb21tZW50CiAgICAgICAgICAgIHRoaXMub3Blbl90YXNrLmNvbHVtbl9pZCA9IGNvbHVtbl9pZAogICAgICAgICAgICB0aGlzLm9wZW5fdGFzay5pZCA9IHRhc2tfaWQKICAgICAgICAgICAgdGhpcy5lZGl0X3Rhc2tfZGlhbG9nID0gdHJ1ZQogICAgICAgICAgICB0aGlzLm9wZW5fdGFzay5maW5pc2hfZGF0ZSA9IG51bGwKICAgICAgICB9LAogICAgICAgIHNhdmVfY29tbWVudCgpIHsKICAgICAgICAgICAgY29uc3QgY29sX2lkeCA9IHRoaXMuZ2V0RGVzay5jb2x1bW5zLmZpbmRJbmRleChjb2wgPT4gY29sLmlkID09IHRoaXMub3Blbl90YXNrLmNvbHVtbl9pZCkKICAgICAgICAgICAgY29uc3QgdGFza19pZHggPSB0aGlzLmdldERlc2suY29sdW1uc1tjb2xfaWR4XS50YXNrcy5maW5kSW5kZXgodGFzayA9PiB0YXNrLmlkID09IHRoaXMub3Blbl90YXNrLmlkKQogICAgICAgICAgICB0aGlzLmdldERlc2suY29sdW1uc1tjb2xfaWR4XS50YXNrc1t0YXNrX2lkeF0uY29tbWVudCA9IHRoaXMub3Blbl90YXNrLmNvbW1lbnQKICAgICAgICAgICAgdGhpcy51cGRhdGVEZXNrKHRoaXMuZ2V0RGVzaykKICAgICAgICAgICAgdGhpcy5zZXRBbGVydCh7CiAgICAgICAgICAgICAgICAnb3Blbic6IHRydWUsCiAgICAgICAgICAgICAgICAnY29sb3InOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAndGV4dCc6ICfQmtC+0LzQvNC10L3RgtCw0YDQuNC5INGB0L7RhdGA0LDQvdC10L0uJwogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgZmluaXNoX3Rhc2soKSB7CiAgICAgICAgICAgIGNvbnN0IGNvbF9pZHggPSB0aGlzLmdldERlc2suY29sdW1ucy5maW5kSW5kZXgoY29sID0+IGNvbC5pZCA9PSB0aGlzLm9wZW5fdGFzay5jb2x1bW5faWQpCiAgICAgICAgICAgIGNvbnN0IHRhc2tfaWR4ID0gdGhpcy5nZXREZXNrLmNvbHVtbnNbY29sX2lkeF0udGFza3MuZmluZEluZGV4KHRhc2sgPT4gdGFzay5pZCA9PSB0aGlzLm9wZW5fdGFzay5pZCkKICAgICAgICAgICAgdGhpcy5nZXREZXNrWydmaW5pc2hlZF90YXNrcyddLnVuc2hpZnQodGhpcy5nZXREZXNrLmNvbHVtbnNbY29sX2lkeF0udGFza3NbdGFza19pZHhdKQogICAgICAgICAgICB0aGlzLmdldERlc2suY29sdW1uc1tjb2xfaWR4XS50YXNrcy5zcGxpY2UodGFza19pZHgsIDEpCiAgICAgICAgICAgIHRoaXMudXBkYXRlRGVzayh0aGlzLmdldERlc2spCiAgICAgICAgICAgIHRoaXMuZmluaXNoX3Rhc2tfZGlhbG9nID0gdGhpcy5lZGl0X3Rhc2tfZGlhbG9nID0gZmFsc2UKICAgICAgICB9LAogICAgICAgIHNhdmUoZGF0ZSkgewogICAgICAgICAgICB0aGlzLiRyZWZzLm1lbnUuc2F2ZShkYXRlKQogICAgICAgIH0sCiAgICAgICAgc2F2ZV9hbmRfY2FsbF9hcGkoZGF0ZSkgewogICAgICAgICAgICB0aGlzLiRyZWZzLm1lbnUuc2F2ZShkYXRlKQogICAgICAgICAgICB0aGlzLmFwaUNhbGwoZGF0ZS5zcGxpdCgnLScpKQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["EditDesk.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6PA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditDesk.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-container>\r\n        <h1>{{getDesk.title}}</h1>\r\n\r\n        <draggable\r\n                class=\"row\"\r\n                v-model=\"getDesk.columns\"\r\n                group=\"statuses\"\r\n                :list=\"getDesk.columns\"\r\n                @start=\"drag = true\"\r\n                @end=\"drag = false\"\r\n                v-bind=\"dragOptions\"\r\n                @change=\"updateDesk(getDesk)\"\r\n        >\r\n            <v-simple-table\r\n                    class=\"pa-2 table\"\r\n                    outlined\r\n                    v-for=\"group in getDesk.columns\"\r\n                    :key=\"group.title\"\r\n            >\r\n                <template v-slot:default>\r\n                    <v-icon class=\"delete-col\" @click=\"remove_column(group.id)\">mdi-delete</v-icon>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>{{group.title}}</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <draggable\r\n                            v-model=\"getDesk.columns\"\r\n                            group=\"tasks\"\r\n                            :list=\"group.tasks\"\r\n                            @start=\"drag = true\"\r\n                            @end=\"drag = false\"\r\n                            v-bind=\"dragOptions\"\r\n                            tag=\"tbody\"\r\n                            @change=\"updateDesk(getDesk)\"\r\n                    >\r\n                        <tr\r\n                                v-for=\"task in group.tasks\"\r\n                                :key=\"task.id\">\r\n                            <td @click=\"open_task_view(task.id, group.id)\">{{task.title}}</td>\r\n                        </tr>\r\n                    </draggable>\r\n                </template>\r\n            </v-simple-table>\r\n        </draggable>\r\n\r\n        <div class=\"buttons__block\">\r\n            <v-dialog v-model=\"add_column_dialog\" persistent max-width=\"600px\">\r\n                <template v-slot:activator=\"{ on }\">\r\n                    <v-btn v-on=\"on\" color=\"primary\">Создать колонку</v-btn>\r\n                </template>\r\n                <v-card>\r\n                    <v-card-title>\r\n                        <span class=\"headline\">Создание новой колонки</span>\r\n                    </v-card-title>\r\n                    <v-card-text>\r\n                        <v-container>\r\n                            <v-row>\r\n                                <v-col cols=\"12\">\r\n                                    <v-text-field label=\"Название*\" v-model=\"new_column_title\" required></v-text-field>\r\n                                </v-col>\r\n                            </v-row>\r\n                        </v-container>\r\n                    </v-card-text>\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn color=\"blue darken-1\" text @click=\"add_column_dialog = false\">Отмена</v-btn>\r\n                        <v-btn color=\"blue darken-1\" text @click=\"push_column\" :disabled=\"!new_column_title\">\r\n                            Сохранить колонку\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n\r\n            <v-dialog v-model=\"add_task_dialog\" persistent max-width=\"600px\">\r\n                <template v-slot:activator=\"{ on }\">\r\n                    <v-btn v-on=\"on\" color=\"primary\">Создать задачу</v-btn>\r\n                </template>\r\n                <v-card>\r\n                    <v-card-title>\r\n                        <span class=\"headline\">Создание новой задачи</span>\r\n                    </v-card-title>\r\n                    <v-card-text>\r\n                        <v-container>\r\n                            <v-row>\r\n                                <v-col cols=\"12\">\r\n                                    <v-text-field label=\"Название*\" v-model=\"new_task.title\" required></v-text-field>\r\n                                </v-col>\r\n                                <v-col cols=\"12\">\r\n                                    <v-textarea label=\"Описание\" v-model=\"new_task.description\"\r\n                                    ></v-textarea>\r\n                                </v-col>\r\n                                <v-col cols=\"12\">\r\n                                    <v-menu\r\n                                            ref=\"menu\"\r\n                                            v-model=\"menu\"\r\n                                            :close-on-content-click=\"false\"\r\n                                            transition=\"scale-transition\"\r\n                                            offset-y\r\n                                            min-width=\"290px\"\r\n                                    >\r\n                                        <template v-slot:activator=\"{ on }\">\r\n                                            <v-text-field\r\n                                                    v-model=\"new_task.deadline\"\r\n                                                    label=\"Дата завершения\"\r\n                                                    readonly\r\n                                                    v-on=\"on\"\r\n                                            ></v-text-field>\r\n                                        </template>\r\n                                        <v-date-picker\r\n                                                ref=\"picker\"\r\n                                                v-model=\"new_task.deadline\"\r\n                                                min=\"1950-01-01\"\r\n                                                @change=\"save\"\r\n                                        ></v-date-picker>\r\n                                    </v-menu>\r\n                                </v-col>\r\n                                <v-col cols=\"12\">\r\n                                    <v-select\r\n                                            :items=\"getDesk.columns\"\r\n                                            v-model=\"new_task.status_id\"\r\n                                            required\r\n                                            item-text=\"title\"\r\n                                            item-value=\"id\"\r\n                                            label=\"Статус задачи*\"\r\n                                    ></v-select>\r\n                                </v-col>\r\n                            </v-row>\r\n                        </v-container>\r\n                    </v-card-text>\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn color=\"blue darken-1\" text @click=\"add_task_dialog = false\">Отмена</v-btn>\r\n                        <v-btn color=\"blue darken-1\" text @click=\"push_task\"\r\n                               :disabled=\"!new_task.title || !new_task.status_id\">\r\n                            Добавить задачу\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n\r\n\r\n            <v-menu offset-y>\r\n                <template v-slot:activator=\"{ on }\">\r\n                    <v-btn\r\n                            v-on=\"on\"\r\n                    >\r\n                        Перейти к другой доске\r\n                    </v-btn>\r\n                </template>\r\n                <v-list>\r\n                    <v-list-item\r\n                            v-for=\"(desk, index) in getAllDesks\"\r\n                            :to=\"`/desks/${desk.id}`\"\r\n                            :key=\"index\"\r\n                            @click=\"\"\r\n                    >\r\n                        <v-list-item-title>{{ desk.title }}</v-list-item-title>\r\n                    </v-list-item>\r\n                </v-list>\r\n            </v-menu>\r\n        </div>\r\n\r\n        <v-dialog v-model=\"edit_task_dialog\" persistent max-width=\"600px\">\r\n            <v-card>\r\n                <v-card-title>\r\n                    <span class=\"headline\">Просмотр задачи</span>\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-container>\r\n                        <v-row>\r\n                            <v-col cols=\"12\">\r\n                                <v-text-field label=\"Название\" v-model=\"open_task.title\" readonly></v-text-field>\r\n                            </v-col>\r\n                            <v-col cols=\"12\" v-if=\"open_task.description\">\r\n                                <v-textarea label=\"Описание\" v-model=\"open_task.description\" readonly\r\n                                ></v-textarea>\r\n                            </v-col>\r\n                            <v-col cols=\"12\" v-if=\"open_task.deadline\">\r\n                                <v-text-field label=\"Дедлайн\" v-model=\"open_task.deadline\" readonly></v-text-field>\r\n                            </v-col>\r\n                            <v-col cols=\"12\" v-if=\"open_task.comment || add_comment\">\r\n                                <v-textarea label=\"Комментарий\" v-model=\"open_task.comment\"\r\n                                ></v-textarea>\r\n                                <v-btn color=\"primary\" @click=\"save_comment\">Сохранить комментарий</v-btn>\r\n                            </v-col>\r\n                            <v-col cols=\"12\" v-else>\r\n                                <v-btn color=\"primary\" @click=\"add_comment = true\">Добавить комментарий</v-btn>\r\n                            </v-col>\r\n                        </v-row>\r\n                    </v-container>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn color=\"blue darken-1\" text @click=\"edit_task_dialog = false\">Закрыть\r\n                    </v-btn>\r\n                    <v-dialog v-model=\"finish_task_dialog\" persistent max-width=\"600px\">\r\n                        <template v-slot:activator=\"{ on }\">\r\n                            <v-btn v-on=\"on\" color=\"blue darken-1\" text>Завершить задачу</v-btn>\r\n                        </template>\r\n                        <v-card>\r\n                            <v-card-title>\r\n                                <span class=\"headline\">Завершение задачи</span>\r\n                            </v-card-title>\r\n                            <v-card-text>\r\n                                <v-container>\r\n                                    <v-row>\r\n                                        <v-col cols=\"12\">\r\n                                            <v-menu\r\n                                                    ref=\"menu\"\r\n                                                    v-model=\"finish_menu\"\r\n                                                    :close-on-content-click=\"false\"\r\n                                                    transition=\"scale-transition\"\r\n                                                    offset-y\r\n                                                    min-width=\"290px\"\r\n                                            >\r\n                                                <template v-slot:activator=\"{ on }\">\r\n                                                    <v-text-field\r\n                                                            v-model=\"open_task.finish_date\"\r\n                                                            label=\"Дата завершения\"\r\n                                                            readonly\r\n                                                            v-on=\"on\"\r\n                                                    ></v-text-field>\r\n                                                </template>\r\n                                                <v-date-picker\r\n                                                        ref=\"picker\"\r\n                                                        v-model=\"open_task.finish_date\"\r\n                                                        min=\"1950-01-01\"\r\n                                                        @change=\"save_and_call_api\"\r\n                                                ></v-date-picker>\r\n                                            </v-menu>\r\n                                        </v-col>\r\n                                    </v-row>\r\n                                </v-container>\r\n                            </v-card-text>\r\n                            <v-card-actions>\r\n                                <v-spacer></v-spacer>\r\n                                <v-btn color=\"blue darken-1\" text @click=\"finish_task_dialog = false\">Отмена</v-btn>\r\n                                <v-btn color=\"blue darken-1\" text @click=\"finish_task\" :disabled=\"!open_task.finish_date\">\r\n                                    Завершить задачу\r\n                                </v-btn>\r\n                            </v-card-actions>\r\n                        </v-card>\r\n                    </v-dialog>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\n    import draggable from \"vuedraggable\"\r\n    import {mapActions} from 'vuex'\r\n\r\n    export default {\r\n        name: \"Table\",\r\n        components: {\r\n            draggable\r\n        },\r\n        data() {\r\n            return {\r\n                drag: false,\r\n                menu: false,\r\n                finish_menu: false,\r\n                add_comment: false,\r\n                edit_task_dialog: false,\r\n                finish_task_dialog: false,\r\n                add_column_dialog: false,\r\n                add_task_dialog: false,\r\n                new_column_title: '',\r\n                new_task: {\r\n                    'title': '',\r\n                    'description': '',\r\n                    'deadline': null,\r\n                    'status_id': ''\r\n                },\r\n                open_task: {\r\n                    'title': '',\r\n                    'description': '',\r\n                    'deadline': null,\r\n                    'comment': '',\r\n                    'id': null,\r\n                    'column_id': null,\r\n                    'finish_date': null\r\n                }\r\n            };\r\n        },\r\n        computed: {\r\n            getDesk() {\r\n                return this.$store.getters.getDeskById(+this.$route.params.id)\r\n            },\r\n            getAllDesks() {\r\n                return this.$store.getters.getDesks\r\n            },\r\n            dragOptions() {\r\n                return {\r\n                    animation: 200,\r\n                    group: \"description\",\r\n                    disabled: false,\r\n                    ghostClass: \"ghost\"\r\n                };\r\n            }\r\n        },\r\n        watch: {},\r\n        methods: {\r\n            ...mapActions(['updateDesk', 'setAlert', 'apiCall']),\r\n            fn() {\r\n                console.log('123')\r\n            },\r\n            push_column() {\r\n                const col = {\r\n                    'title': this.new_column_title,\r\n                    'id': this.getDesk.columns.reduce((prev, current) => (prev.id > current.id) ? prev : current).id + 1,\r\n                    'tasks': []\r\n                }\r\n                this.updateDesk(this.getDesk.columns.push(col))\r\n                this.add_column_dialog = false\r\n                this.new_column_title = ''\r\n            },\r\n            push_task() {\r\n                this.getDesk.columns.find(col => col.id == this.new_task.status_id)['tasks'].push({\r\n                    'id': +new Date(),\r\n                    'title': this.new_task.title,\r\n                    'description': this.new_task.description,\r\n                    'deadline': this.new_task.deadline,\r\n                })\r\n                this.updateDesk(this.getDesk)\r\n                this.add_task_dialog = false\r\n                this.new_task = {\r\n                    'title': '',\r\n                    'description': '',\r\n                    'deadline': null,\r\n                    'status_id': ''\r\n                }\r\n            },\r\n            remove_column(id) {\r\n                const idx = this.getDesk.columns.findIndex(col => col.id == id)\r\n                if (this.getDesk.columns[idx].tasks.length) this.setAlert({\r\n                    'open': true,\r\n                    'color': 'error',\r\n                    'text': 'Нельзя удалить колонку, в которой есть элементы.'\r\n                })\r\n                else {\r\n                    const desk = this.getDesk.columns.splice(idx, 1)\r\n                    this.updateDesk(desk)\r\n                }\r\n            },\r\n            open_task_view(task_id, column_id) {\r\n                const task = this.getDesk.columns.find(col => col.id == column_id).tasks.find(task => task.id == task_id)\r\n                this.open_task.title = task.title\r\n                this.open_task.description = task.description\r\n                this.open_task.deadline = task.deadline\r\n                this.open_task.comment = task.comment\r\n                this.open_task.column_id = column_id\r\n                this.open_task.id = task_id\r\n                this.edit_task_dialog = true\r\n                this.open_task.finish_date = null\r\n            },\r\n            save_comment() {\r\n                const col_idx = this.getDesk.columns.findIndex(col => col.id == this.open_task.column_id)\r\n                const task_idx = this.getDesk.columns[col_idx].tasks.findIndex(task => task.id == this.open_task.id)\r\n                this.getDesk.columns[col_idx].tasks[task_idx].comment = this.open_task.comment\r\n                this.updateDesk(this.getDesk)\r\n                this.setAlert({\r\n                    'open': true,\r\n                    'color': 'success',\r\n                    'text': 'Комментарий сохранен.'\r\n                })\r\n            },\r\n            finish_task() {\r\n                const col_idx = this.getDesk.columns.findIndex(col => col.id == this.open_task.column_id)\r\n                const task_idx = this.getDesk.columns[col_idx].tasks.findIndex(task => task.id == this.open_task.id)\r\n                this.getDesk['finished_tasks'].unshift(this.getDesk.columns[col_idx].tasks[task_idx])\r\n                this.getDesk.columns[col_idx].tasks.splice(task_idx, 1)\r\n                this.updateDesk(this.getDesk)\r\n                this.finish_task_dialog = this.edit_task_dialog = false\r\n            },\r\n            save(date) {\r\n                this.$refs.menu.save(date)\r\n            },\r\n            save_and_call_api(date) {\r\n                this.$refs.menu.save(date)\r\n                this.apiCall(date.split('-'))\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    h1 {\r\n        margin-bottom: 50px;\r\n        text-align: left;\r\n    }\r\n\r\n    tr {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .flip-list-move {\r\n        transition: transform 0.5s;\r\n    }\r\n\r\n    .no-move {\r\n        transition: transform 0s;\r\n    }\r\n\r\n    .ghost {\r\n        opacity: 0.5;\r\n        background: #c8ebfb;\r\n    }\r\n\r\n    .list-group {\r\n        min-height: 20px;\r\n    }\r\n\r\n    .list-group-item {\r\n        cursor: move;\r\n    }\r\n\r\n    .list-group-item i {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .table {\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        padding: 0 !important;\r\n        margin-right: 15px;\r\n        position: relative;\r\n    }\r\n\r\n    .delete-col {\r\n        position: absolute;\r\n        bottom: -30px;\r\n        right: 0;\r\n        transition: all .3s;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .table:hover .delete-col {\r\n        opacity: 1;\r\n    }\r\n\r\n    .table thead th {\r\n        text-transform: uppercase;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .row {\r\n        margin: 0;\r\n    }\r\n\r\n    .buttons__block {\r\n        margin-top: 50px;\r\n    }\r\n\r\n    .buttons__block button {\r\n        margin-right: 20px;\r\n    }\r\n</style>"]}]}